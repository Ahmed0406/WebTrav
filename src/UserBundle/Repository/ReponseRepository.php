<?php

namespace UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ReponseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReponseRepository extends EntityRepository
{
    public function findByCandidatScore($candidat_id)
    {
        $result = $this->getEntityManager()
            ->createQuery(
                'SELECT reponse.success
                FROM UserBundle:Reponse reponse
                WHERE reponse.userCandidat = :candidat_id'
            )
            ->setParameter('candidat_id', $candidat_id)
            ->getResult();

        return $this->sommeScore($result);
    }

    public function sommeScore($result)
    {
        $return = [];
        $score = 10;

        foreach ($result as $values) {
            foreach ($values as $key => $value) {
                if ($value == true) {
                    $return = ['score' => $score];
                    $score = $score + 10;
                }
            }
        }
        return $return;
    }


    public function findByCandidatEtaps($candidat_id)
    {
        $result = $this->getEntityManager()
            ->createQuery(
                'SELECT reponse.success
                FROM UserBundle:Reponse reponse
                WHERE reponse.userCandidat = :candidat_id'
            )
            ->setParameter('candidat_id', $candidat_id)
            ->getResult();

        return $this->etapeReponse($result);
    }

    public function etapeReponse($result)
    {
        $return = array();
        $data = array();
        $label = array();

        foreach ($result as $values) {
            foreach ($values as $key => $value) {
                if ($value == true) {
                    $data[] = 10;
                    $label[] = '';
                } elseif ($value == false) {
                    $data[] = 0;
                    $label[] = '';
                }
            }
        }

        $return['data']= $data;
        $return['label']= $label;

        return $return;

    }
}
